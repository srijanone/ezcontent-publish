<?php

use Drupal\Core\Link;
use Drupal\Core\Url;
use Drupal\layout_library\Entity\Layout;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Cache\Cache;

/**
 * Implements hook_menu_local_tasks_alter().
 */
function ezcontent_publish_menu_local_tasks_alter(&$data, $route_name) {
  foreach ($data['tabs'] as &$tabs) {
    foreach ($tabs as &$tab) {
      $route_name = $tab['#link']['url']->getRouteName();
      if ($route_name == 'entity.user.canonical') {
        $tab['#link']['title'] = t('Dashboard');
      }
    }
  }
}

/**
 * Implements hook_entity_insert().
 */
function ezcontent_publish_entity_insert(EntityInterface $entity) {
  switch ($entity->getEntityTypeId()) {
    case 'action':
      if ($entity->getPlugin()->getPluginId() === 'user_add_role_action') {
        $labelArg = $entity->label()->getArguments();
        $roleConfig = $entity->getPlugin()->getConfiguration();
        $roleId = $roleConfig['rid'];
        $layout = Layout::create([
          'id' => $roleId . '_dashboard',
          'label' => t('@label Dashboard', ['@label' => $labelArg['@label']]),
          'revision' => FALSE,
        ]);
        $layout->set('targetEntityType', 'user');
        $layout->set('targetBundle', 'user');
        $layout->save();
      }
      break;
    case 'user':
      if ($entity->layout_selection->isEmpty()) {
        $roles = $entity->getRoles();
        $rolesToExclude = ['anonymous', 'authenticated', 'administrator'];
        $roles = array_diff($roles, $rolesToExclude);
        $role = '';
        if (!empty($roles)) {
          $role = array_shift($roles);
        }
        // Check if dashboard exist for this role
        if ($role) {
          $storedLayout = \Drupal::entityTypeManager()
            ->getStorage('layout')
            ->load($role . '_dashboard');
          if ($storedLayout) {
            $entity->layout_selection->setValue([$storedLayout->id()]);
            $entity->save();
          }
        }
      }
      break;
  }
}

/**
 * Implements hook_theme().
 */
function ezcontent_publish_theme($existing, $type, $theme, $path) {
  return [
    'user_shortcut_block_template' => [
      'variables' => ['data' => NULL],
    ]
  ];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ezcontent_publish_form_shortcut_set_customize_form_alter(&$form, $form_state, $form_id) {
  $currentUser = \Drupal::currentUser();
  foreach ($form['shortcuts']['links'] as $key => $value) {
    if (is_numeric($key)) {
      $form['shortcuts']['links'][$key]['operations']['#links']['edit']['url'] = Url::fromRoute('ezcontent_publish.shortcut.edit_form', array('shortcut' => $key));
      $form['shortcuts']['links'][$key]['operations']['#links']['delete']['url'] = Url::fromRoute('ezcontent_publish.shortcut.delete_form', array('shortcut' => $key));
      $currentUserRoles = $currentUser->getRoles();
      if (!in_array('administrator', $currentUserRoles)) {
        $currentUrl = ltrim(\Drupal::service('path.current')->getPath(), '/');
        $addShortcutUrl = Url::fromRoute('ezcontent_publish.shortcut.link_add', array('shortcut_set' => 'shortcut_set_' . $currentUser->getUsername() . '_' . $currentUser->id()), ['query' => ['destination' => $currentUrl]]);
        $addShortcutLink = Link::fromTextAndUrl(t('Add Shortcut'), $addShortcutUrl)->toString();
        $form['add_shortcut_link'] = [
          '#markup' => $addShortcutLink
        ];
      }
    }
  }
}

/**
 * Implements hook_form_FORM_alter().
 */
function ezcontent_publish_form_alter(&$form, $form_state, $form_id) {
  $currentUser = \Drupal::currentUser();
  if ($currentUser->id() != '1' ) {
    $form['shortcuts']['links']['#empty'] = t('No shortcuts available. <a href=":link">Add a shortcut</a>', [':link' => Url::fromRoute('ezcontent_publish.shortcut.link_add', ['shortcut_set' => 'shortcut_set_' . $currentUser->getUsername() . '_' . $currentUser->id()])->toString()]);
  }
  $formIds = [
    'shortcut_default_add_form',
    'shortcut_set_customize_form',
    'shortcut_default_form',
    'shortcut_confirm_delete',
    'shortcut_shortcut_set_' . $currentUser->getUsername() . '_' . $currentUser->id() . '_form',
  ];
  if (in_array($form_id, $formIds)) {
    $form['actions']['submit']['#submit'][] = 'ezcontent_publish_shortcut_form_submit';
  }
}

/**
 * Implements ezcontent_publish_shortcut_form_submit().
 */
function ezcontent_publish_shortcut_form_submit(array $form, $form_state) {
  if (!in_array('administrator', \Drupal::currentUser()->getRoles())) {
    $shortcutSet = $form_state->getFormObject()->getEntity()->get('shortcut_set')->getValue()[0]['target_id'];
    $redirectUrl = Url::fromRoute('ezcontent_publish.shortcut_set.customize_form', array('shortcut_set' => $shortcutSet));
    $form_state->setRedirectUrl($redirectUrl);
  }
}
